name: All packages build

on:
  push:
    branches: [ main ]
  pull_request:
    branches:
      - '**/*'

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      packages: write

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
            dotnet-version: |
              7.0.x
    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        node-version: 16
        registry-url: 'https://npm.pkg.github.com/'
        scope: '@principlestudios'
    - uses: pnpm/action-setup@v2
      name: Install pnpm
      with:
        version: 8
        run_install: false

    - name: Cache nuget packages
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        # Look to see if there is a cache hit for the corresponding requirements file
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget
    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
    - uses: actions/cache@v3
      name: Setup pnpm cache
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    ###########
    # BUILD
    - name: Build
      run: |
        if [[ $VERSION_SUFFIX ]]; then
          VERSION_SUFFIX_PARAM="--version-suffix sha.$VERSION_SUFFIX"
        else
          VERSION_SUFFIX_PARAM=''
        fi
        dotnet build --configuration Release ${VERSION_SUFFIX_PARAM}
      env:
        VERSION_SUFFIX: ${{ github.ref != 'refs/heads/main' && github.sha || '' }}

    ###########
    # TEST
    - name: Test
      run: dotnet test --no-build --verbosity normal --configuration Release

    ###########
    # PUBLISH
    - name: Publish npm packages to GitHub
      working-directory: ./artifacts/packages/Release
      run:  |
        find . -type f -regex ".*\.tgz" -exec npm publish "{}" --access public \;
      env:
        NODE_AUTH_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
    - name: Publish npm packages to NPM
      working-directory: ./artifacts/packages/Release
      if: ${{ github.ref == 'refs/heads/main' }}
      run:  |
        sed -i 's_//npm.pkg.github.com/_//registry.npmjs.org/_g' ${NPM_CONFIG_USERCONFIG}
        find . -type f -regex ".*\.tgz" -exec npm publish "{}" --access public \;
      env:
        NODE_AUTH_TOKEN: "${{ secrets.NPM_TOKEN }}"
